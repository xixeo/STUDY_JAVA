package CH14;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;


//public interface Comparator<T>{
//	int compare(T 01, T 02);
//}
//
//public interface Comparable<T> {
//	public int compareTo(T o);
//}   

class Student {
	String sno;
	String sname;
	
	public Student(String sno, String sname) {
		this.sno = sno;
		this.sname = sname;
	}
	
	public String toString() {
		return "이름:"+ sname  + ", "+ sno + " 번" ;
	}
}

public class test_객체배열리스트정렬comparator {
	
	static void showStudents(String msg, Object[]data) {
		System.out.println(msg);
		for(int i = 0; i < data.length; i++) {
			System.out.println(" " + data[i]);
		}
	}
	
	static void sortStudents() {
		
	}

	public static void main(String[] args) {
		Comparator<Student> compSno = new Comparator<Student>(){
			@Override
			public int compare(Student s1, Student s2) {
				return Integer.parseInt(s1.sno) - Integer.parseInt(s2.sno);
			}
		};

		Student[] sArray = new Student[5];

		// Student 객체 생성 및 배열에 할당
		sArray[0] = new Student("121", "Alice");
		sArray[1] = new Student("33", "Bob");
		sArray[2] = new Student("9", "Charlie");
		sArray[3] = new Student("2", "John");
		sArray[4] = new Student("39", "Bobby");
		// ArrayList로 변환
		ArrayList<Student> sList = new ArrayList<>();
		for (Student student : sArray) {
			sList.add(student);
		}
		showStudents("sno 정렬전", sArray);
		//문제1: Arrays.sort()를 사용한 sArray 정렬 - sno 사용, 익명클래스 사용
		Arrays.sort(sArray, (Comparator<Student> compSno1 = new Comparator<Student>(){ public int compare(Student s, Student s2) {return Integer.parseInt(s1.sno) - Integer.parseInt(s2.sno)}}));
		
		
		
		showStudents("sno 정렬후", sArray);

		showStudents("sname 정렬전", sArray);
		//문제2: Arrays.sort()를 사용한 sArray 정렬 - sname 사용, 익명 객체 사용
		showStudents("sname 정렬후", sArray);

		showStudents("sno 정렬전", sList);
		//문제3: Collections.sort()를 사용한 sList 정렬 - sno 사용, 람다식 사용

		showStudents("sno 정렬후", sList);

		showStudents("sname 정렬전", sList);
		//문제4: Collections.sort()를 사용한 sList 정렬 - sname 사용
		Collections.sort(sList, 람다식)
		showStudents("sname 정렬후", sList);

		showStudents("sno 정렬전", sArray);
		//문제5: sortStudents()를 사용한 sArray 정렬 - sno 사용
		showStudents("sname 정렬후", sArray);





	}

}